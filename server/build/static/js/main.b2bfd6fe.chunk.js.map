{"version":3,"sources":["components/Auth/Auth.js","services/auth.service.js","services/room.service.js","actions/room.action.js","hooks/useDebounce.hook.js","components/SideBar/Drawer.js","components/SideBar/UserList.js","components/SideBar/SideBar.js","services/users.service.js","helpers/socket.io.js","helpers/socketIo.middleware.js","actions/auth.action.js","containers/UserScreen/MessageBar.js","containers/UserScreen/UserScreen.js","actions/user.action.js","components/Auth/SignUp.js","App.js","serviceWorker.js","reducers/auth.reducer.js","reducers/room.reducer.js","reducers/users.reducer.js","reducers/index.js","helpers/store.js","index.js","helpers/handleResponse.js","helpers/jsonToQueryParams.js","helpers/headers.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","login","error","loggedIn","clear","classes","$username","useRef","$password","history","useHistory","useState","errorMsg","setErrorMsg","useEffect","Boolean","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","Grid","item","xs","style","height","Collapse","in","onExited","Alert","severity","onClose","AlertTitle","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","current","target","value","type","FormControlLabel","control","Checkbox","color","Button","onClick","container","push","cursor","auth","username","password","a","requestInit","headers","authHeader","fetch","jsonToQueryParams","process","then","handleResponse","data","localStorage","setItem","token","signUp","firstName","lastName","email","method","body","JSON","stringify","console","log","message","require","roomServices","getMyRooms","members","initRequest","_getMyRooms","dispatch","payload","failure","useDebounce","callback","timeout","timerRef","tmpCb","useCallback","arg","clearTimeout","setTimeout","styles","grey","searchBar","chipContainer","padding","flexWrap","chip","Drawer","open","onOpen","searchUsers","users","List","addedUsers","setAddedUsers","debounced","v","handleOnChange","handleOnUserDelete","_id","index","findIndex","user","get","splice","SwipeableDrawer","anchor","Autocomplete","s","fromJS","getOptionLabel","opt","getOptionSelected","marginLeft","options","filter","el","includes","toJS","renderInput","params","placeholder","InputProps","disableUnderline","Divider","map","Chip","key","icon","FaceOutlined","onDelete","root","background","inline","listItem","justifyContent","listItemActive","primary","dark","listItemLastMessage","text","disabled","UserList","rooms","active","setActive","showSearchUser","setShowSearchUser","useDispatch","currentActive","useSelector","state","size","join","ListItem","align","Tooltip","title","placement","IconButton","Add","i","lastMessage","reverse","lastSender","senderId","length","findSender","sender","ListItemAvatar","alt","getIn","src","ListItemText","textAlign","primaryTypographyProps","noWrap","withStyles","flex","overflow","borderRadius","borderBottom","borderRight","searchInput","fontSize","typography","block","addUser","marginRight","contentWrapper","loading","onAddUser","refreshRooms","fakeLoading","setFilter","ctx","Set","reduce","acc","b","concat","Paper","AppBar","position","elevation","Toolbar","LinearProgress","search","userServices","page","limit","initSocket","jwtToken","socketOptions","Promise","res","rej","socket","io","on","emit","err","initSocketEvents","store","removeAllListeners","createSocketIoMiddleware","_socket","next","action","info","catch","room","headerContainer","MessageContainer","messageBox","paddingTop","listItemText","listItemSenderText","messageItemPaper","senderBox","senderPaper","Header","MessageItem","itsMe","myUser","getSender","$paper","scrollIntoView","behavior","Box","ref","MessageSender","onSend","$textField","onSubmit","preventDefault","rows","inputRef","aria-label","Send","mapDispatchToProps","sendMessage","connect","Map","messages","myUserId","searchUsersFakeLoading","modal","backgroundColo","loading1","loading2","myRooms","activeRoom","Copyright","Link","href","Date","getFullYear","SignUp","$firstName","$lastName","$email","successMsg","setSuccessMsg","sm","justify","mt","createMuiTheme","light","contrastText","tonalOffset","ThemeProvider","path","exact","render","location","to","pathname","from","CircularProgress","window","hostname","match","initialState","set","withMutations","mutable","String","Array","updateIn","null","reducer","combineReducers","composeEnhancers","compose","middleware","thunk","createStore","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","env","json","status","statusText","apiUrl","url","URL","k","undefined","searchParams","append","toString","urlParams","URLSearchParams","getItem","Authorization"],"mappings":"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","file":"static/js/main.b2bfd6fe.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, Link as MuiLink, Collapse } from \"@material-ui/core\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn({ login, loggedIn, error, clear }) {\r\n    const classes = useStyles();\r\n    const $username = useRef();\r\n    const $password = useRef();\r\n    const history = useHistory();\r\n    const [errorMsg, setErrorMsg] = useState(false);\r\n    const handleSubmit = () => {\r\n        login($username.current, $password.current);\r\n    };\r\n    useEffect(() => {\r\n        setErrorMsg(Boolean(error));\r\n    }, [error]);\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <div className={classes.form} noValidate>\r\n                    <Grid item xs={12} style={{ height: \"100%\" }}>\r\n                        <Collapse in={errorMsg} onExited={clear}>\r\n                            <Alert\r\n                                severity=\"error\"\r\n                                onClose={() => setErrorMsg(false)}\r\n                            >\r\n                                <AlertTitle>Error</AlertTitle>\r\n                                {error}\r\n                            </Alert>\r\n                        </Collapse>\r\n                    </Grid>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={(e) => {\r\n                            $username.current = e.target.value;\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(e) => {\r\n                            $password.current = e.target.value;\r\n                        }}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs></Grid>\r\n                        <Grid item>\r\n                            <MuiLink\r\n                                onClick={() => history.push(\"/signup\")}\r\n                                style={{ cursor: \"pointer\" }}\r\n                            >\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </MuiLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import { jsonToQueryParams } from \"../helpers/jsonToQueryParams\";\r\nimport { handleResponse } from \"../helpers/handleResponse\";\r\nimport { authHeader } from \"../helpers/headers\";\r\n\r\nexport const auth = async (username, password) => {\r\n    /**\r\n     * @type {RequestInit}\r\n     */\r\n    const requestInit = {\r\n        headers: { ...authHeader() },\r\n    };\r\n    const data = await fetch(\r\n        jsonToQueryParams(process.env.REACT_APP_LOGIN, {\r\n            username,\r\n            password,\r\n        }),\r\n        requestInit\r\n    )\r\n        .then(handleResponse)\r\n        .then((data) => {\r\n            localStorage.setItem(\"token\", data.data?.token);\r\n            return data.data;\r\n        });\r\n    return data;\r\n};\r\n\r\nexport const signUp = async ({\r\n    firstName,\r\n    lastName,\r\n    username,\r\n    email,\r\n    password,\r\n}) => {\r\n    /**\r\n     * @type {RequestInit}\r\n     */\r\n    const requestInit = {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            firstName,\r\n            lastName,\r\n            username,\r\n            email,\r\n            password,\r\n        }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    console.log(process.env.REACT_APP_SIGN_UP)\r\n    const data = await fetch(process.env.REACT_APP_SIGN_UP, requestInit)\r\n        .then(handleResponse)\r\n        .then((data) => {\r\n            return data.message;\r\n        });\r\n    return data;\r\n};\r\n","const { authHeader } = require(\"../helpers/headers\");\r\nconst { handleResponse } = require(\"../helpers/handleResponse\");\r\nconst { jsonToQueryParams } = require(\"../helpers/jsonToQueryParams\");\r\nconst getMyRooms = async (members) => {\r\n    const initRequest = {\r\n        headers: { ...authHeader() },\r\n    };\r\n    const data = await fetch(\r\n        jsonToQueryParams(process.env.REACT_APP_ROOM, { members }),\r\n        initRequest\r\n    )\r\n        .then(handleResponse)\r\n        .then((data) => data.data);\r\n    return data;\r\n};\r\n\r\nexport const roomServices = {\r\n    getMyRooms,\r\n};\r\n\r\n/**\r\n * Get my rooms\r\n * @callback getMyRooms\r\n */\r\n","import { roomServices } from \"../services/room.service\";\r\n\r\nexport const GET_MY_ROOMS_REQUEST = \"GET_MY_ROOMS_REQUEST\";\r\nexport const GET_MY_ROOMS_SUCCESS = \"GET_MY_ROOMS_SUCCESS\";\r\nexport const GET_MY_ROOMS_FAILURE = \"GET_MY_ROOMS_FAILURE\";\r\n\r\nexport const SELECT_ACTIVE_ROOM = \"SELECT_ACTIVE_ROOM\";\r\n\r\nexport const selectActiveRoom = (payload) => ({\r\n    type: SELECT_ACTIVE_ROOM,\r\n    payload,\r\n});\r\n\r\nexport const _getMyRooms = (members) => (dispatch) => {\r\n    const request = () => {\r\n        return { type: GET_MY_ROOMS_REQUEST };\r\n    };\r\n    const success = (payload) => {\r\n        return { type: GET_MY_ROOMS_SUCCESS, payload };\r\n    };\r\n    const failure = (error) => {\r\n        return { type: GET_MY_ROOMS_FAILURE, payload: error };\r\n    };\r\n    dispatch(request());\r\n    roomServices.getMyRooms(members).then(\r\n        (data) => dispatch(success(data)),\r\n        (error) => dispatch(failure(error))\r\n    );\r\n};\r\n","import {useCallback, useRef} from 'react';\r\n/**\r\n * Creates debounced function\r\n * @param  {function(): *} callback callback\r\n * @param  {number} timeout debounce timer in milliseconds\r\n * @returns {function(): *} debounced function\r\n */\r\nconst useDebounce = (callback, timeout = 0) => {\r\n\tconst timerRef = useRef();\r\n\tconst tmpCb = useCallback(\r\n\t\t(...arg) => {\r\n\t\t\tclearTimeout(timerRef.current);\r\n\t\t\ttimerRef.current = setTimeout(() => callback(...arg), timeout);\r\n\t\t},\r\n\t\t[callback, timeout, timerRef]\r\n\t);\r\n\treturn tmpCb;\r\n};\r\n\r\nexport default useDebounce;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    SwipeableDrawer,\r\n    TextField,\r\n    makeStyles,\r\n    Divider,\r\n    Chip,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport useDebounce from \"../../hooks/useDebounce.hook\";\r\nimport { List, fromJS } from \"immutable\";\r\nimport { FaceOutlined } from \"@material-ui/icons\";\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: \"100%\",\r\n        width: \"400px\",\r\n    },\r\n    searchBar: {\r\n        margin: \"50px 10px\",\r\n    },\r\n    chipContainer: {\r\n        padding: \"20px\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    chip: {\r\n        margin: \"10px\",\r\n    },\r\n}));\r\n\r\nconst Drawer = ({ open, onOpen, onClose, searchUsers, users }) => {\r\n    const classes = styles();\r\n\r\n    const [addedUsers, setAddedUsers] = useState(List());\r\n\r\n    const debounced = useDebounce((v) => {\r\n        searchUsers(v);\r\n    }, 300);\r\n    const handleOnChange = (e) => {\r\n        const v = e.target.value;\r\n        debounced(v);\r\n    };\r\n    const handleOnUserSelect = (e, v) => {\r\n        if (v) setAddedUsers((s) => s.push(fromJS(v)));\r\n    };\r\n    const handleOnUserDelete = (_id) => {\r\n        const index = addedUsers.findIndex((user) => user.get(\"_id\") === _id);\r\n        setAddedUsers((v) => v.splice(index, 1));\r\n    };\r\n    return (\r\n        <SwipeableDrawer\r\n            open={open}\r\n            onOpen={onOpen}\r\n            onClose={() => {\r\n                onClose(addedUsers);\r\n                setAddedUsers(List());\r\n            }}\r\n            anchor=\"left\"\r\n        >\r\n            <div className={classes.container}>\r\n                {\r\n                    <div className={classes.searchBar}>\r\n                        <Autocomplete\r\n                            onChange={handleOnUserSelect}\r\n                            getOptionLabel={(opt) => opt.username}\r\n                            getOptionSelected={(opt) => opt.username}\r\n                            style={{ width: \"90%\", marginLeft: \"20px\" }}\r\n                            options={users\r\n                                .get(\"data\")\r\n                                .filter((el) => !addedUsers.includes(el))\r\n                                .toJS()}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    fullWidth\r\n                                    placeholder=\"Search by email address, phone number, or user UID\"\r\n                                    onChange={handleOnChange}\r\n                                    InputProps={{\r\n                                        disableUnderline: true,\r\n                                        // className: classes.searchInput,\r\n                                    }}\r\n                                    {...params}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                }\r\n                <Divider />\r\n                <div className={classes.chipContainer}>\r\n                    {addedUsers.map((el) => {\r\n                        return (\r\n                            <Chip\r\n                                key={el.get(\"_id\")}\r\n                                icon={<FaceOutlined />}\r\n                                label={\r\n                                    (el.get(\"firstName\") ??\r\n                                        el.get(\"username\") ??\r\n                                        \"\") +\r\n                                    \" \" +\r\n                                    (el.get(\"lastName\") ?? \"\")\r\n                                }\r\n                                onDelete={handleOnUserDelete}\r\n                                className={classes.chip}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </SwipeableDrawer>\r\n    );\r\n};\r\n\r\nexport default Drawer;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Button, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport { selectActiveRoom } from \"../../actions/room.action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Drawer from \"./Drawer\";\r\nconst useStyles = makeStyles((theme) => {\r\n    return {\r\n        root: {\r\n            width: \"99%\",\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        inline: {\r\n            display: \"inline\",\r\n        },\r\n        listItem: {\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n        },\r\n        listItemActive: {\r\n            backgroundColor: theme.palette.primary.dark,\r\n        },\r\n        listItemLastMessage: {\r\n            color: theme.palette.text.disabled,\r\n        },\r\n    };\r\n});\r\n\r\nconst findSender = (users, senderId) => {\r\n    for (let i = 0; i < users.length; i++) {\r\n        const user = users[i];\r\n        if (user._id === senderId) return user;\r\n    }\r\n};\r\n\r\n/**\r\n * @param {Object} props\r\n * @param {Array.<Room>} props.rooms\r\n */\r\nexport default function UserList({\r\n    rooms,\r\n    active,\r\n    setActive,\r\n    users,\r\n    searchUsers,\r\n    getMyRooms,\r\n}) {\r\n    const [showSearchUser, setShowSearchUser] = useState(false);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const currentActive = useSelector((state) =>\r\n        state.rooms.get(\"currentActive\")\r\n    );\r\n    const handleOnAddUserClick = () => setShowSearchUser((v) => !v);\r\n    const handleOnClose = (users) => {\r\n        setShowSearchUser(false);\r\n        if (users?.size > 0) {\r\n            getMyRooms(users.map((el) => el.get(\"username\")).join(\",\"));\r\n        }\r\n    };\r\n    const handleOnOpen = () => setShowSearchUser(true);\r\n    return (\r\n        <>\r\n            <Drawer\r\n                open={showSearchUser}\r\n                onOpen={handleOnOpen}\r\n                onClose={handleOnClose}\r\n                searchUsers={searchUsers}\r\n                users={users}\r\n            />\r\n            <List className={classes.root}>\r\n                {rooms.size === 0 && (\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <Typography color=\"textSecondary\" align=\"center\">\r\n                            No users for this project yet\r\n                        </Typography>\r\n                    </ListItem>\r\n                )}\r\n                {\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <Tooltip title=\"Add user\" placement=\"right\">\r\n                            <IconButton onClick={handleOnAddUserClick}>\r\n                                <Add />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </ListItem>\r\n                }\r\n                {rooms.map((el, i) => {\r\n                    const lastMessage = el.get(\"messages\").reverse().toJS()[0];\r\n                    const lastSender = findSender(\r\n                        el.get(\"members\").toJS(),\r\n                        lastMessage?.sender\r\n                    );\r\n                    return (\r\n                        <div key={el.get(\"_id\")}>\r\n                            <ListItem alignItems=\"flex-start\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color={\r\n                                        currentActive === i\r\n                                            ? \"primary\"\r\n                                            : \"default\"\r\n                                    }\r\n                                    className={classes.listItem}\r\n                                    onClick={() =>\r\n                                        dispatch(selectActiveRoom(i))\r\n                                    }\r\n                                >\r\n                                    <ListItemAvatar style={{ marginTop: 0 }}>\r\n                                        <Avatar\r\n                                            alt={el.getIn([\r\n                                                \"members\",\r\n                                                0,\r\n                                                \"firstName\",\r\n                                            ])}\r\n                                            src=\"/static/images/avatar/2.jpg\"\r\n                                        />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={el\r\n                                            .getIn([\"members\"])\r\n                                            .map((el) => el.get(\"firstName\"))\r\n                                            .toJS()\r\n                                            .join(\" , \")}\r\n                                        style={{\r\n                                            textAlign: \"left\",\r\n                                        }}\r\n                                        primaryTypographyProps={{\r\n                                            noWrap: true,\r\n                                        }}\r\n                                        secondary={\r\n                                            <Typography\r\n                                                color=\"textPrimary\"\r\n                                                noWrap\r\n                                            >\r\n                                                {lastSender &&\r\n                                                    lastSender?.firstName +\r\n                                                        \" - \"}\r\n                                                <span\r\n                                                    className={\r\n                                                        classes.listItemLastMessage\r\n                                                    }\r\n                                                >\r\n                                                    {lastMessage?.data}\r\n                                                </span>\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </Button>\r\n                            </ListItem>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </List>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nimport UserList from \"./UserList\";\r\nimport { Set } from \"immutable\";\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        flex: 1,\r\n        maxWidth: 768,\r\n        overflow: \"hidden\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100vh\",\r\n        borderRadius: 0,\r\n    },\r\n    searchBar: {\r\n        borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n        borderRight: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n        flex: 1,\r\n    },\r\n    searchInput: {\r\n        fontSize: theme.typography.fontSize,\r\n    },\r\n    block: {\r\n        display: \"block\",\r\n    },\r\n    addUser: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    contentWrapper: {\r\n        // margin: \"0px 16px 40px 16px\",\r\n        flex: 22,\r\n    },\r\n});\r\n\r\n/**\r\n * Chat side container , showing users and searchbar\r\n * @param {Object} props\r\n * @param {Object.<String>} props.classes\r\n * @param {Function} props.onAddUser\r\n * @param {Boolean} props.loading\r\n * @param {Array.<Room>} props.rooms\r\n * @param {Array.<User>} props.users\r\n */\r\nfunction SideBar({\r\n    classes,\r\n    onAddUser,\r\n    loading,\r\n    rooms,\r\n    refreshRooms,\r\n    users,\r\n    searchUsers,\r\n    fakeLoading,\r\n    active,\r\n    getMyRooms,\r\n}) {\r\n    const [filter, setFilter] = useState(\"\");\r\n    const ctx = Set(\r\n        rooms.reduce(\r\n            (acc, b) =>\r\n                acc.concat(\r\n                    b\r\n                        .get(\"members\")\r\n                        .map((el) => {\r\n                            return el.get(\"username\");\r\n                        })\r\n                        .toJS()\r\n                ),\r\n            []\r\n        )\r\n    ).toJS();\r\n    // const debouncedSearch = useDebounce((v) => {\r\n    //     searchUsers(v);\r\n    // }, 300);\r\n    const handleOnChange = (e) => {\r\n        setFilter(e.target.value);\r\n        // const v = e.target.value;\r\n        // fakeLoading();\r\n        // debouncedSearch(v);\r\n    };\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <AppBar\r\n                className={classes.searchBar}\r\n                position=\"static\"\r\n                color=\"default\"\r\n                elevation={0}\r\n            >\r\n                <Toolbar>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        <Grid item>\r\n                            <SearchIcon\r\n                                className={classes.block}\r\n                                color=\"inherit\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <Autocomplete\r\n                                id=\"combo-box-demo\"\r\n                                // getOptionLabel={(opt) => opt.username}\r\n                                onChange={(e, v) => setFilter(v)}\r\n                                options={ctx}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder=\"Search by email address, phone number, or user UID\"\r\n                                        onChange={handleOnChange}\r\n                                        InputProps={{\r\n                                            disableUnderline: true,\r\n                                            className: classes.searchInput,\r\n                                        }}\r\n                                        {...params}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Tooltip title=\"Reload\">\r\n                                <IconButton onClick={() => refreshRooms()}>\r\n                                    <RefreshIcon\r\n                                        className={classes.block}\r\n                                        color=\"inherit\"\r\n                                    />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div style={{ height: \"4px\" }}>{loading && <LinearProgress />}</div>\r\n            <div className={classes.contentWrapper}>\r\n                {\r\n                    <UserList\r\n                        searchUsers={searchUsers}\r\n                        users={users}\r\n                        active={active}\r\n                        getMyRooms={getMyRooms}\r\n                        rooms={rooms.filter((el) => {\r\n                            if (!filter) return true;\r\n                            return (\r\n                                el\r\n                                    .get(\"members\")\r\n                                    .map((el) => el.get(\"username\"))\r\n                                    .toJS()\r\n                                    .join(\" \")\r\n                                    .search(filter) !== -1\r\n                            );\r\n                        })}\r\n                    />\r\n                }\r\n            </div>\r\n        </Paper>\r\n    );\r\n}\r\n// (\r\n//     rooms.map((el) => {\r\n//         return <p key={el._id}>{el._id}</p>;\r\n//     })\r\nSideBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SideBar);\r\n","import { authHeader } from \"../helpers/headers\";\r\nimport { jsonToQueryParams } from \"../helpers/jsonToQueryParams\";\r\nimport { handleResponse } from \"../helpers/handleResponse\";\r\n\r\nconst search = async ({ search, page = 0, limit = 50 }) => {\r\n    const initRequest = {\r\n        headers: { ...authHeader() },\r\n    };\r\n    const data = await fetch(\r\n        jsonToQueryParams(process.env.REACT_APP_USERS, { search, page, limit }),\r\n        initRequest\r\n    )\r\n        .then(handleResponse)\r\n        .then((data) => data.data);\r\n    return data;\r\n};\r\n\r\nexport const userServices = {\r\n    search,\r\n};\r\n","import io from \"socket.io-client\";\r\n\r\nexport const d_SOCKET_UNAUTHORIZED = \"unauthorized\";\r\nexport const d_SOCKET_AUTHENTICATED = \"authenticated\";\r\nexport const d_SOCKET_MESSAGE = \"message\";\r\nexport const d_SOCKET_AUTH = \"auth\";\r\n/**\r\n * Creating socket connection and authenticating\r\n * @param {String} jwtToken - user jwt token\r\n * @param {SocketIOClient.ConnectOpts} [socketOptions] - socket options\r\n * @return {Promise<SocketIO.Socket>}\r\n */\r\nconst initSocket = (jwtToken, socketOptions) => {\r\n    return new Promise((res, rej) => {\r\n        const socket = io(process.env.REACT_APP_SOCKET, socketOptions);\r\n        socket.on(\"connect\", () => {\r\n            socket.emit(\"auth\", { token: jwtToken });\r\n        });\r\n        socket.on(d_SOCKET_AUTHENTICATED, () => {\r\n            res(socket);\r\n        });\r\n        socket.on(\"error\", (err) => {\r\n            rej(err);\r\n        });\r\n    });\r\n};\r\n\r\nexport default initSocket;\r\n","import initSocket from \"./socket.io\";\r\nimport { LOGIN_SUCCESS } from \"../actions/auth.action\";\r\nimport { _getMyRooms } from \"../actions/room.action\";\r\n\r\nexport const SOCKET_MESSAGE_RECEIVED = \"SOCKET_MESSAGE_RECEIVED\";\r\nexport const SOCKET_SEND_MESSAGE = \"SOCKET_SEND_MESSAGE\";\r\nexport const SOCKET_ERROR = \"SOCKET_ERROR\";\r\nexport const SOCKET_NEW_ROOM = \"SOCKET_NEW_ROOM\";\r\n\r\nexport const sendSocketMessage = (payload) => ({\r\n    type: SOCKET_SEND_MESSAGE,\r\n    payload,\r\n});\r\n/**\r\n * Creates redux middleware which tracking store and socket events\r\n * @param {SocketIOClient.ConnectOpts} [socketOptions] - socket options\r\n * @return {import(\"redux\").Middleware}\r\n */\r\nconst createSocketIoMiddleware = (socketOptions) => {\r\n    /**\r\n     * @type {SocketIO.Socket}\r\n     */\r\n    let _socket = null;\r\n    return (store) => (next) => (action) => {\r\n        if (action.type === LOGIN_SUCCESS) {\r\n            initSocket(action.payload.token, socketOptions)\r\n                .then((socket) => {\r\n                    console.info(\"Socket connected\");\r\n                    _socket = socket;\r\n                    initSocketEvents(socket, store);\r\n                })\r\n                .catch((err) => {\r\n                    console.error(\"Socket error - \", err);\r\n                    store.dispatch({ type: SOCKET_ERROR, payload: err });\r\n                });\r\n        }\r\n        if (action.type === SOCKET_SEND_MESSAGE) {\r\n            const { room, message } = action.payload;\r\n            if (room && message && _socket)\r\n                _socket.emit(\"message\", { room, message });\r\n        }\r\n        return next(action);\r\n    };\r\n};\r\n/**\r\n * @param {SocketIOClient.Socket} socket\r\n * @param {import(\"redux\").Store} store\r\n */\r\nconst initSocketEvents = (socket, store) => {\r\n    socket.removeAllListeners();\r\n    socket.on(\"message\", (payload) => {\r\n        store.dispatch({ type: SOCKET_MESSAGE_RECEIVED, payload });\r\n    });\r\n    socket.on(\"newRoom\", (payload) => {\r\n        store.dispatch({ type: SOCKET_NEW_ROOM, payload });\r\n        store.dispatch(_getMyRooms());\r\n    });\r\n};\r\n\r\nexport default createSocketIoMiddleware;\r\n","import { auth, signUp } from \"../services/auth.service\";\r\n\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n// ---------------------------------------------------------- //\r\nexport const SIGNUP_REQUEST = \"SIGNUP_REQUEST\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\r\n// ---------------------------------------------------------- //\r\nexport const CLEAR_AUTH_MESSAGES = \"CLEAR_AUTH_MESSAGES\";\r\n// ---------------------------------------------------------- //\r\n\r\nexport const _clearAuthMessages = () => ({ type: CLEAR_AUTH_MESSAGES });\r\n\r\nexport const _signUp = ({ firstName, lastName, username, email, password }) => (\r\n    dispatch\r\n) => {\r\n    const request = () => {\r\n        return { type: SIGNUP_REQUEST };\r\n    };\r\n    const success = (payload) => {\r\n        return { type: SIGNUP_SUCCESS, payload };\r\n    };\r\n    const failure = (error) => {\r\n        return { type: SIGNUP_FAILURE, payload: error };\r\n    };\r\n    dispatch(request());\r\n    signUp({ firstName, lastName, username, email, password }).then(\r\n        (data) => dispatch(success(data)),\r\n        (error) => dispatch(failure(error))\r\n    );\r\n};\r\n\r\nexport const _login = (username, password) => (dispatch) => {\r\n    const request = () => {\r\n        return { type: LOGIN_REQUEST };\r\n    };\r\n    const success = (payload) => {\r\n        return { type: LOGIN_SUCCESS, payload };\r\n    };\r\n    const failure = (error) => {\r\n        return { type: LOGIN_FAILURE, payload: error };\r\n    };\r\n\r\n    dispatch(request());\r\n    auth(username, password).then(\r\n        (data) => dispatch(success(data)),\r\n        (error) => dispatch(failure(error))\r\n    );\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport {\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n    AppBar,\r\n    Box,\r\n    Avatar,\r\n    TextField,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\nimport { Send } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { Map, List } from \"immutable\";\r\nimport { sendSocketMessage } from \"../../helpers/socketIo.middleware\";\r\nconst useStyles = makeStyles((styles) => ({\r\n    paper: {\r\n        backgroundColor: styles.palette.background.paper,\r\n        flex: 2,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100vh\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerContainer: {\r\n        backgroundColor: styles.palette.grey[100],\r\n        padding: \"18px\",\r\n        display: \"flex\",\r\n        borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\r\n    },\r\n    title: {\r\n        fontSize: \"20px\",\r\n    },\r\n    MessageContainer: {\r\n        padding: \"20px\",\r\n        backgroundColor: styles.palette.background.paper,\r\n        flex: 21,\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n    },\r\n    messageBox: {\r\n        backgroundColor: styles.palette.grey[100],\r\n        height: \"100%\",\r\n        overflow: \"auto\",\r\n        paddingTop: \"20px\",\r\n    },\r\n    listItemText: {\r\n        fontSize: \"16px\",\r\n    },\r\n    listItemSenderText: {\r\n        fontSize: \"14px\",\r\n    },\r\n    messageItemPaper: {\r\n        padding: \"10px\",\r\n    },\r\n    senderBox: {\r\n        backgroundColor: styles.palette.grey[100],\r\n        padding: \"20px\",\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        flex: 2,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    senderPaper: {\r\n        backgroundColor: styles.palette.grey[100],\r\n    },\r\n}));\r\n\r\nconst Header = ({ user }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar\r\n            className={classes.headerContainer}\r\n            position=\"static\"\r\n            color=\"default\"\r\n            elevation={0}\r\n        >\r\n            <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.title}\r\n                color=\"textPrimary\"\r\n            >\r\n                {user?.map((el) => el.get(\"username\")).join(\" , \")}\r\n            </Typography>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nconst MessageItem = ({ avatar, text, sender, itsMe }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: itsMe ? \"row-reverse\" : \"row\",\r\n                alignItems: \"flex-end\",\r\n                margin: \"0 0 20px 0\",\r\n            }}\r\n        >\r\n            <Avatar\r\n                style={{\r\n                    marginRight: \"20px\",\r\n                    marginLeft: \"20px\",\r\n                }}\r\n                src={\"/empty/\"}\r\n                alt={sender.get(\"username\")}\r\n            ></Avatar>\r\n            <div>\r\n                <Typography\r\n                    color=\"textSecondary\"\r\n                    className={classes.listItemSenderText}\r\n                    style={{ textAlign: itsMe ? \"right\" : \"left\" }}\r\n                >\r\n                    {sender.get(\"username\")}\r\n                </Typography>\r\n                <Paper className={classes.messageItemPaper}>\r\n                    <Typography\r\n                        className={classes.listItemText}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        {text}\r\n                    </Typography>\r\n                </Paper>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst MessageContainer = ({ data, myUser, getSender }) => {\r\n    const classes = useStyles();\r\n    const $paper = useRef();\r\n    useEffect(() => {\r\n        $paper.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [data.size]);\r\n    return (\r\n        <Box className={classes.MessageContainer}>\r\n            <Paper className={classes.messageBox}>\r\n                {data.map((el) => {\r\n                    return (\r\n                        <MessageItem\r\n                            key={el.get(\"_id\")}\r\n                            text={el?.get(\"data\")}\r\n                            sender={getSender(el.get(\"sender\"))}\r\n                            itsMe={myUser === el.get(\"sender\")}\r\n                        />\r\n                    );\r\n                })}\r\n                <div ref={$paper}></div>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst MessageSender = ({ onSend }) => {\r\n    const classes = useStyles();\r\n    const $textField = useRef();\r\n    return (\r\n        <form\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                onSend($textField.current.value);\r\n                $textField.current.value = \"\";\r\n            }}\r\n        >\r\n            <Box className={classes.senderBox}>\r\n                <TextField\r\n                    style={{\r\n                        height: \"100%\",\r\n                        margin: 0,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                    rows={1}\r\n                    placeholder=\"Type a message\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    inputRef={$textField}\r\n                />\r\n                <IconButton\r\n                    aria-label=\"send\"\r\n                    style={{ width: \"60px\" }}\r\n                    type=\"submit\"\r\n                >\r\n                    <Send />\r\n                </IconButton>\r\n            </Box>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MessageBar = ({ room, myUserId, sendMessage }) => {\r\n    const classes = useStyles();\r\n    const getSender = (senderId) => {\r\n        return room.getIn([\r\n            \"members\",\r\n            room.get(\"members\").findIndex((el) => el.get(\"_id\") === senderId),\r\n        ]);\r\n    };\r\n\r\n    const handleSend = (message) => {\r\n        sendMessage({ room: room.get(\"_id\"), message });\r\n    };\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Header user={room.get(\"members\")} />\r\n            <MessageContainer\r\n                data={room.get(\"messages\")}\r\n                myUser={myUserId}\r\n                getSender={getSender}\r\n            />\r\n            <MessageSender onSend={handleSend} />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const room =\r\n        state.rooms.get(\"rooms\").size > 0\r\n            ? state.rooms.getIn([\"rooms\", state.rooms.get(\"currentActive\")])\r\n            : Map({ messages: List() });\r\n    const myUserId = state.auth.getIn([\"user\", \"_id\"]);\r\n\r\n    return {\r\n        room,\r\n        myUserId,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    sendMessage: sendSocketMessage,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBar);\r\n","import React, { useEffect } from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport SideBar from \"../../components/SideBar/SideBar\";\r\nimport { _getMyRooms } from \"../../actions/room.action\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchUsers, searchUsersFakeLoading } from \"../../actions/user.action\";\r\nimport MessageBar from \"./MessageBar\";\r\n\r\n/**\r\n * Logged in user screen\r\n * @param {Object} props\r\n * @param {import(\"@material-ui/core\").StyledComponentProps.<ClassKey>} props.classes\r\n * @param {getMyRooms} props.getMyRooms\r\n * @param {Map.<RoomsKeys,*>} props.rooms\r\n * @param {Array.<User>} props.users\r\n */\r\nconst UserScreen = ({\r\n    classes,\r\n    rooms,\r\n    users,\r\n    getMyRooms,\r\n    searchUsers,\r\n    searchUsersFakeLoading,\r\n}) => {\r\n    useEffect(() => {\r\n        getMyRooms();\r\n    }, [getMyRooms]);\r\n    const loading1 = rooms.get(\"loading\");\r\n    const loading2 = users.get(\"loading\");\r\n    const myRooms = rooms.get(\"rooms\");\r\n    const activeRoom = rooms.get(\"currentActive\");\r\n    return (\r\n        <section className={classes.container}>\r\n            <SideBar\r\n                refreshRooms={getMyRooms}\r\n                getMyRooms={getMyRooms}\r\n                loading={loading1 || loading2}\r\n                rooms={myRooms}\r\n                users={users}\r\n                searchUsers={searchUsers}\r\n                fakeLoading={searchUsersFakeLoading}\r\n                activeRoom={activeRoom}\r\n            />\r\n            <MessageBar />\r\n        </section>\r\n    );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        backgroundColor: \"red\",\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        // width:\"100%\",\r\n        display: \"flex\",\r\n    },\r\n    modal: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColo: \"red\",\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    rooms: state.rooms,\r\n    users: state.users,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getMyRooms: _getMyRooms,\r\n    searchUsers,\r\n    searchUsersFakeLoading,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(UserScreen));\r\n","import { userServices } from \"../services/users.service\";\r\n\r\nexport const SEARCH_USERS_REQUEST = \"SEARCH_USERS_REQUEST\";\r\nexport const SEARCH_USERS_SUCCESS = \"SEARCH_USERS_SUCCESS\";\r\nexport const SEARCH_USERS_FAILURE = \"SEARCH_USERS_FAILURE\";\r\n\r\nexport const SEARCH_FAKE_LOADING = \"SEARCH_FAKE_LOADING\";\r\n\r\nexport const CLEAR_USERS_MESSAGES = \"CLEAR_USERS_MESSAGES\";\r\n// ---------------------------------------------------------- //\r\n\r\nexport const searchUsersFakeLoading = () => ({ type: SEARCH_FAKE_LOADING });\r\n\r\nexport const clearUserMessages = () => ({ type: CLEAR_USERS_MESSAGES });\r\n\r\nexport const searchUsers = (search, page = 0, limit = 20) => (dispatch) => {\r\n    const request = () => {\r\n        return { type: SEARCH_USERS_REQUEST };\r\n    };\r\n    const success = (payload) => {\r\n        return { type: SEARCH_USERS_SUCCESS, payload };\r\n    };\r\n    const failure = (error) => {\r\n        return { type: SEARCH_USERS_FAILURE, payload: error };\r\n    };\r\n    dispatch(request());\r\n    userServices.search({ search, page, limit }).then(\r\n        (data) => dispatch(success(data)),\r\n        (error) => dispatch(failure(error))\r\n    );\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {\"Copyright © \"}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{\" \"}\r\n            {new Date().getFullYear()}\r\n            {\".\"}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst SignUp = ({ signUp, error, message, loading, clear }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const $firstName = useRef();\r\n    const $lastName = useRef();\r\n    const $username = useRef();\r\n    const $email = useRef();\r\n    const $password = useRef();\r\n\r\n    const [errorMsg, setErrorMsg] = useState(false);\r\n    const [successMsg, setSuccessMsg] = useState(false);\r\n\r\n    const handleSubmit = () => {\r\n        signUp({\r\n            firstName: $firstName.current,\r\n            lastName: $lastName.current,\r\n            username: $username.current,\r\n            email: $email.current,\r\n            password: $password.current,\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        setErrorMsg(Boolean(error));\r\n    }, [error]);\r\n    useEffect(() => {\r\n        setSuccessMsg(Boolean(message));\r\n        if (Boolean(message)) setTimeout(() => history.push(\"/login\"), 2000);\r\n    }, [message]);\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <div className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} style={{ height: \"100%\" }}>\r\n                            <Collapse in={errorMsg} onExited={clear}>\r\n                                <Alert\r\n                                    severity=\"error\"\r\n                                    onClose={() => setErrorMsg(false)}\r\n                                >\r\n                                    <AlertTitle>Error</AlertTitle>\r\n                                    {error}\r\n                                </Alert>\r\n                            </Collapse>\r\n                            <Collapse in={successMsg}>\r\n                                <Alert\r\n                                    severity=\"success\"\r\n                                    onClose={() => setSuccessMsg(false)}\r\n                                >\r\n                                    <AlertTitle>Success</AlertTitle>\r\n                                    {message}\r\n                                </Alert>\r\n                            </Collapse>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                onChange={(e) =>\r\n                                    ($firstName.current = e.target.value)\r\n                                }\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                                onChange={(e) =>\r\n                                    ($lastName.current = e.target.value)\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"username\"\r\n                                onChange={(e) =>\r\n                                    ($username.current = e.target.value)\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                onChange={(e) =>\r\n                                    ($email.current = e.target.value)\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={(e) =>\r\n                                    ($password.current = e.target.value)\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link\r\n                                onClick={() => history.push(\"/login\")}\r\n                                style={{ cursor: \"pointer\" }}\r\n                                variant=\"body2\"\r\n                            >\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n            <Box mt={5}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport SignIn from \"./components/Auth/Auth\";\nimport {\n    CircularProgress,\n    Container,\n    createMuiTheme,\n    ThemeProvider,\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { _login, _signUp, _clearAuthMessages } from \"./actions/auth.action\";\nimport UserScreen from \"./containers/UserScreen/UserScreen\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport SignUp from \"./components/Auth/SignUp\";\nconst theme = createMuiTheme({\n    palette: {\n        // primary: {\n        //     // light: will be calculated from palette.primary.main,\n        //     main: \"#ff4400\",\n        //     // dark: will be calculated from palette.primary.main,\n        //     // contrastText: will be calculated to contrast with palette.primary.main\n        // },\n        secondary: {\n            light: \"#0066ff\",\n            main: \"#0044ff\",\n            // dark: will be calculated from palette.secondary.main,\n            contrastText: \"#ffcc00\",\n        },\n        // Used by `getContrastText()` to maximize the contrast between\n        // the background and the text.\n        tonalOffset: 0.2,\n    },\n});\n\nconst App = ({ auth, login, signUp, clear }) => {\n    const loggedIn = auth.get(\"loggedIn\");\n    const error = auth.get(\"error\");\n    const loading = auth.get(\"loading\");\n    const message = auth.get(\"message\");\n    useEffect(() => {\n        login();\n    }, [login]);\n    return (\n        <ThemeProvider theme={theme}>\n            <BrowserRouter>\n                <Switch>\n                    <Route\n                        path=\"/\"\n                        exact\n                        render={({ location }) => {\n                            return loggedIn ? (\n                                <UserScreen />\n                            ) : loggedIn === false ? (\n                                <Redirect\n                                    to={{\n                                        pathname: \"/login\",\n                                        state: { from: location },\n                                    }}\n                                />\n                            ) : (\n                                <Container\n                                    component=\"main\"\n                                    style={{\n                                        height: \"100vh\",\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                    }}\n                                >\n                                    <CircularProgress />\n                                </Container>\n                            );\n                        }}\n                    ></Route>\n                    <Route\n                        path={\"/login\"}\n                        render={({ location }) => {\n                            return loggedIn ? (\n                                <Redirect\n                                    to={{\n                                        pathname: \"/\",\n                                        state: { from: location },\n                                    }}\n                                />\n                            ) : (\n                                <SignIn\n                                    login={login}\n                                    loggedIn={loggedIn}\n                                    error={error}\n                                    clear={clear}\n                                />\n                            );\n                        }}\n                        exact\n                    ></Route>\n                    <Route path={\"/signup\"} exact>\n                        <SignUp\n                            signUp={signUp}\n                            error={error}\n                            message={message}\n                            loading={loading}\n                            clear={clear}\n                        />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </ThemeProvider>\n    );\n};\n\nconst mapStateToProps = (state) => ({ auth: state.auth });\nconst mapDispatchToProps = {\n    login: _login,\n    signUp: _signUp,\n    clear: _clearAuthMessages,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Map } from \"immutable\";\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    SIGNUP_REQUEST,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAILURE,\r\n    CLEAR_AUTH_MESSAGES,\r\n} from \"../actions/auth.action\";\r\nconst initialState = Map({\r\n    loggedIn: null,\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    message: null,\r\n});\r\n\r\nconst auth = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case LOGIN_REQUEST:\r\n            return state\r\n                .set(\"loading\", true)\r\n                .set(\"message\", null)\r\n                .set(\"error\", null);\r\n        case LOGIN_SUCCESS:\r\n            return state.withMutations((mutable) => {\r\n                mutable.set(\"loading\", false);\r\n                mutable.set(\"loggedIn\", true);\r\n                mutable.set(\"user\", payload);\r\n                return mutable;\r\n            });\r\n        case LOGIN_FAILURE:\r\n            return state.withMutations((mutable) => {\r\n                if (mutable.get(\"loggedIn\") !== null)\r\n                    mutable.set(\"error\", String(payload));\r\n                mutable.set(\"loading\", false);\r\n                mutable.set(\"loggedIn\", false);\r\n                return mutable;\r\n            });\r\n        case SIGNUP_REQUEST:\r\n            return state\r\n                .set(\"loading\", true)\r\n                .set(\"message\", null)\r\n                .set(\"error\", null);\r\n        case SIGNUP_SUCCESS:\r\n            return state.set(\"loading\", false).set(\"message\", payload);\r\n        case SIGNUP_FAILURE:\r\n            return state.set(\"loading\", false).set(\"error\", String(payload));\r\n        case CLEAR_AUTH_MESSAGES:\r\n            return state.set(\"error\", null).set(\"message\", null);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default auth;\r\n","import { Map, fromJS } from \"immutable\";\r\nimport {\r\n    GET_MY_ROOMS_REQUEST,\r\n    GET_MY_ROOMS_SUCCESS,\r\n    GET_MY_ROOMS_FAILURE,\r\n    SELECT_ACTIVE_ROOM,\r\n} from \"../actions/room.action\";\r\nimport { SOCKET_MESSAGE_RECEIVED } from \"../helpers/socketIo.middleware\";\r\nconst initialState = Map({\r\n    message: null,\r\n    error: null,\r\n    loading: false,\r\n    rooms: [],\r\n    currentActive: 0,\r\n});\r\nconst rooms = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case GET_MY_ROOMS_REQUEST:\r\n            return state.set(\"loading\", true);\r\n        case GET_MY_ROOMS_SUCCESS:\r\n            return state.withMutations((mutable) => {\r\n                mutable.set(\"loading\", false);\r\n                if (payload instanceof Array)\r\n                    mutable.set(\"rooms\", fromJS(payload));\r\n                return mutable;\r\n            });\r\n        case GET_MY_ROOMS_FAILURE:\r\n            return state.withMutations((mutable) => {\r\n                mutable.set(\"loading\", false);\r\n                mutable.set(\"error\", payload);\r\n                return mutable;\r\n            });\r\n        case SELECT_ACTIVE_ROOM:\r\n            return state.set(\"currentActive\", payload);\r\n        case SOCKET_MESSAGE_RECEIVED:\r\n            return state.updateIn(\r\n                [\r\n                    \"rooms\",\r\n                    state\r\n                        .get(\"rooms\")\r\n                        .findIndex((el) => el.get(\"_id\") === payload.room),\r\n                    \"messages\",\r\n                ],\r\n                (messages) => {\r\n                    return messages.push(fromJS(payload.data));\r\n                }\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rooms;\r\n","import { List, fromJS, Map } from \"immutable\";\r\nimport {\r\n    SEARCH_USERS_REQUEST,\r\n    SEARCH_USERS_SUCCESS,\r\n    SEARCH_USERS_FAILURE,\r\n    CLEAR_USERS_MESSAGES,\r\n    SEARCH_FAKE_LOADING,\r\n} from \"../actions/user.action\";\r\nconst initialState = Map({\r\n    error: null,\r\n    message: null,\r\n    loading: null,\r\n    data: List([]),\r\n});\r\n\r\nconst users = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n        case SEARCH_USERS_REQUEST:\r\n            return state.set(\"loading\", true);\r\n        case SEARCH_USERS_SUCCESS:\r\n            return state.withMutations((mutable) => {\r\n                mutable.set(\"loading\", false);\r\n                mutable.set(\"data\", fromJS(payload));\r\n                mutable.set(\"error\", null);\r\n                return mutable;\r\n            });\r\n        case SEARCH_USERS_FAILURE:\r\n            return state.withMutations((mutable) => {\r\n                mutable.set(\"loading\", false);\r\n                mutable.set(\"error\", String(payload));\r\n                mutable.set(\"data\", List([]));\r\n                mutable.set(\"message\", null);\r\n                return mutable;\r\n            });\r\n        case SEARCH_FAKE_LOADING:\r\n            return state.set(\"loading\", true);\r\n        case CLEAR_USERS_MESSAGES:\r\n            return state.set(\"error\", null).set(\"message\".null);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default users;\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth.reducer\";\r\nimport rooms from \"./room.reducer\";\r\nimport users from \"./users.reducer\";\r\n\r\nconst reducer = combineReducers({\r\n    auth,\r\n    rooms,\r\n    users,\r\n});\r\n\r\nexport default reducer;\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reducer from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport createSocketIoMiddleware from \"./socketIo.middleware\";\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV === \"development\"\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?? compose\r\n        : compose;\r\nconst middleware = [];\r\n\r\nmiddleware.push(thunk);\r\nmiddleware.push(createSocketIoMiddleware());\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./helpers/store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nif (process.env.NODE_ENV === \"development\") {       ///DevTools\r\n    const script = document.createElement(\"script\");\r\n    script.setAttribute(\"src\", \"http://localhost:8097\");\r\n    document.head.appendChild(script);\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\nwindow.env = process.env","/**\r\n * @param {Response} res\r\n * @return {Promise}\r\n */\r\nexport const handleResponse = async (res) => {\r\n    const json = await res.json();\r\n    if (!(res.status >= 200 && res.status <= 300) || json.status === \"error\") {\r\n        throw json.message ?? res.statusText;\r\n    }\r\n    return json;\r\n};\r\n","export const jsonToQueryParams = (apiUrl, data = {}) => {\r\n    try {\r\n        const url = new URL(apiUrl);\r\n        for (const k in data) {\r\n            if (data[k] !== null && data[k] !== undefined)\r\n                url.searchParams.append(k, data[k]);\r\n        }\r\n\r\n        return url.toString();\r\n    } catch (error) {\r\n        const urlParams = new URLSearchParams();\r\n        for (const k in data) {\r\n            if (data[k] !== null && data[k] !== undefined)\r\n                urlParams.append(k, data[k]);\r\n        }\r\n        return apiUrl + \"?\" + urlParams.toString();\r\n    }\r\n};\r\n","/**\r\n * @return {{Authorization:String}}\r\n */\r\nexport const authHeader = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return null;\r\n\r\n    return { Authorization: \"Bearer \" + token };\r\n};\r\n"],"sourceRoot":""}